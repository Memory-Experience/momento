name: Deploy Pages

on:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Node + pnpm (includes pnpm store cache)
      - uses: pnpm/action-setup@v4
        with:
          package_json_file: package.json
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      # Python + uv
      - id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      # Cache the virtualenv created by `uv sync`
      - name: Cache Python venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('uv.lock', 'pyproject.toml') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile
          uv sync --locked

      - name: Build project
        run: pnpm run build

      - name: Build TypeScript docs
        run: pnpm typedoc

      - name: Build MkDocs site
        run: uv run mkdocs build

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
